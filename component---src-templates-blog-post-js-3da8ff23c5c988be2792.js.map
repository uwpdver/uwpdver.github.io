{"version":3,"file":"component---src-templates-blog-post-js-3da8ff23c5c988be2792.js","mappings":"6IAQC,IANoB,SAAH,GAAoB,IAAfA,EAAQ,EAARA,SACpB,OACE,sBAAIC,UAAU,2BAA2BD,EAE7C,C,2HCsFD,UAjFyB,SAAH,GAA4B,IAAD,IAArBE,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAC1BC,EAAOF,EAAKG,eACZC,GAAkC,QAAtB,EAAAJ,EAAKK,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,QACvCC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KAElB,OACE,gBAAC,IAAM,CAACR,SAAUA,EAAUM,MAAOH,GACjC,gBAAC,IAAG,CACFG,MAAOL,EAAKQ,YAAYH,MACxBI,YAAaT,EAAKQ,YAAYC,aAAeT,EAAKU,UAEpD,uBAAKb,UAAU,qCACb,4BACE,2BACEA,UAAU,kBACVc,WAAS,EACTC,SAAS,6BAET,gBAAC,WAAa,CAACf,UAAU,QACvB,gBAAC,IAAW,KAAGG,EAAKQ,YAAYH,OAChC,qBAAGR,UAAU,8BACX,4BAAOG,EAAKQ,YAAYK,OAE1B,sBAAIhB,UAAU,WACU,QADD,EACpBG,EAAKQ,YAAYM,YAAI,aAArB,EAAuBC,KAAI,SAAAC,GAAG,OAC7B,gBAAC,IAAO,CACNC,KAAI,eAAiBC,IAAUF,GAAI,IACnCG,IAAKH,GAEJA,EACO,MAIhB,2BACEnB,UAAU,6BACVuB,wBAAyB,CAAEC,OAAQrB,EAAKsB,MACxCC,SAAS,gBAEX,4BAEF,uBAAK1B,UAAU,iBACb,sBACE2B,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,0BACGvB,GACC,gBAAC,EAAAwB,KAAI,CAACC,GAAIzB,EAAS0B,OAAOC,KAAMC,IAAI,QAAM,KACrC5B,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,EAAAuB,KAAI,CAACC,GAAIxB,EAAKyB,OAAOC,KAAMC,IAAI,QAC7B3B,EAAKC,YAAYH,MAAK,UAOnC,uBAAKR,UAAU,mBACb,uBAAKA,UAAU,wBACb,sBAAIA,UAAU,2BAAyB,QAGvC,uBAAKA,UAAU,MAAMuB,wBAAyB,CAAEC,OAAQrB,EAAKmC,sBAMzE,C","sources":["webpack://gatsby-starter-blog/./src/components/pageHeading.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":[" import * as React from \"react\"\n \n const PageHeading = ({children}) => {\n   return (\n     <h1 className=\"text-4xl font-bold mb-5\">{children}</h1>\n   )\n }\n \n export default PageHeading\n ","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport kebabCase from \"lodash/kebabCase\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport PageHeading from \"../components/pageHeading\"\nimport TagItem from \"../components/tagItem\"\nimport { motion } from 'framer-motion';\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <div className=\"grid grid-cols-content-toc gap-12\">\n        <main>\n          <article\n            className=\"blog-post mb-10\"\n            itemScope\n            itemType=\"http://schema.org/Article\"\n          >\n            <motion.header className=\"mb-4\">\n              <PageHeading >{post.frontmatter.title}</PageHeading>\n              <p className=\"text-sm mb-2 text-gray-400\">\n                <span>{post.frontmatter.date}</span>\n              </p>\n              <ul className=\"text-sm\">\n                {post.frontmatter.tags?.map(tag => (\n                  <TagItem\n                    link={`/posts/tags/${kebabCase(tag)}/`}\n                    key={tag}\n                  >\n                    {tag}\n                  </TagItem>\n                ))}\n              </ul>\n            </motion.header>\n            <section\n              className=\"prose max-w-full pt-4 pb-8\"\n              dangerouslySetInnerHTML={{ __html: post.html }}\n              itemProp=\"articleBody\"\n            />\n            <hr />\n          </article>\n          <nav className=\"blog-post-nav\">\n            <ul\n              style={{\n                display: `flex`,\n                flexWrap: `wrap`,\n                justifyContent: `space-between`,\n                listStyle: `none`,\n                padding: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link to={previous.fields.slug} rel=\"prev\">\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </nav>\n        </main>\n        <div className=\"hidden lg:block\">\n          <nav className=\"sticky top-8 right-0\" >\n            <h2 className=\"text-xl leading-10 mb-5\">\n              文章内容\n            </h2>\n            <div className=\"toc\" dangerouslySetInnerHTML={{ __html: post.tableOfContents }} />\n          </nav>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      tableOfContents(\n          absolute: false\n          maxDepth: 2\n      )\n      frontmatter {\n        title\n        date(formatString: \"YYYY年MM月DD日\")\n        description\n        tags\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["children","className","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","date","tags","map","tag","link","kebabCase","key","dangerouslySetInnerHTML","__html","html","itemProp","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","tableOfContents"],"sourceRoot":""}