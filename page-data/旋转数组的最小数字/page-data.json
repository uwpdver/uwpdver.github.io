{"componentChunkName":"component---src-templates-blog-post-js","path":"/旋转数组的最小数字/","result":{"data":{"site":{"siteMetadata":{"title":"要没时间了的博客"}},"markdownRemark":{"id":"020991ad-88cd-5c47-b74c-a6e419acdc6e","excerpt":"题目： 把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个递增排序的数组的一个旋转，输出旋转数组的最小元素。例如，数组  为  的一个旋转，该数组的最小值为…","html":"<h2>题目：</h2>\n<p>把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个递增排序的数组的一个旋转，输出旋转数组的最小元素。例如，数组 <code class=\"language-text\">[3,4,5,1,2]</code> 为 <code class=\"language-text\">[1,2,3,4,5]</code> 的一个旋转，该数组的最小值为1。</p>\n<h3>示例：</h3>\n<p>示例一：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">输入：[3,4,5,1,2]\n输出：1</code></pre></div>\n<p>示例二：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">输入：[2,2,2,0,1]\n输出：0</code></pre></div>\n<h2>思路</h2>\n<p>首先要理解数组的旋转这个概念，我的理解是：将数组从一个位置分为两个子数组，将这两个子数组之间的先后顺序交换，子数组内部的顺序不变。题目中给出的条件是输入的是递增排序的数组的旋转。从题目中给出的例子也可以看到，较小的子数组被旋转到了后面。所以如果从前往后遍历输入的数组的话，当遍历到一个数字比它前面的一个数字小，根据旋转的定义，旋转之后的两个子数组内部也一定是递增的，所以可以说明和前面那个数字不属于同一个子数组。该数字还是该子数组的第一个数字，也就是该子数组中最小的数字。因为这个子数组位于整个数组的后半部，所以旋转前它就是位于前半部，所以这个数字就是旋转前的递增数组的第一个数字，也就是我们要找的最小的数字。</p>\n<h3>注意：</h3>\n<p>当遍历完了整个数组还没有一个任何一个比前一个数字小的数字时，可以理解为这个数组分了一个空子数组旋转，相当于没有旋转，所以最小值还是数组中第一个数字。</p>\n<h3>要点：</h3>\n<ul>\n<li>有序递增数组。</li>\n<li>子数组顺序不变。</li>\n<li>找出变化不符合规律的数字即为切分点。</li>\n</ul>\n<h2>代码</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">minArray</span><span class=\"token punctuation\">(</span>numbers<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numbers<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> numbers<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                result <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>相关阅读</h2>\n<ul>\n<li><a href=\"https://leetcode-cn.com/problems/xuan-zhuan-shu-zu-de-zui-xiao-shu-zi-lcof/\">剑指 Offer 11. 旋转数组的最小数字 - 力扣（LeetCode） (leetcode-cn.com)</a></li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"#%E9%A2%98%E7%9B%AE\">题目：</a></li>\n<li><a href=\"#%E6%80%9D%E8%B7%AF\">思路</a></li>\n<li><a href=\"#%E4%BB%A3%E7%A0%81\">代码</a></li>\n<li><a href=\"#%E7%9B%B8%E5%85%B3%E9%98%85%E8%AF%BB\">相关阅读</a></li>\n</ul>","frontmatter":{"title":"旋转数组的最小数字","date":"2021年10月28日","description":"这是一道简单题。","tags":["刷题","数组","LeetCode"]}},"previous":{"fields":{"slug":"/数组中重复的数字——哈希表，空间换时间/"},"frontmatter":{"title":"数组中重复的数字——哈希表，空间换时间"}},"next":{"fields":{"slug":"/折腾博客的一天/"},"frontmatter":{"title":"折腾博客的一天"}}},"pageContext":{"id":"020991ad-88cd-5c47-b74c-a6e419acdc6e","previousPostId":"7d29c0f2-0bcd-56c4-b169-3620d6dc03fa","nextPostId":"e78a4f62-e3f0-562f-9201-a3a1bd3bd06c"}},"staticQueryHashes":["2792646216","2841359383"]}