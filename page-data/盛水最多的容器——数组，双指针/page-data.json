{"componentChunkName":"component---src-templates-blog-post-js","path":"/盛水最多的容器——数组，双指针/","result":{"data":{"site":{"siteMetadata":{"title":"要没时间了的博客"}},"markdownRemark":{"id":"46792beb-bda3-5ef1-a451-1c9a8c249869","excerpt":"题目： 给你 n…","html":"<h2>题目：</h2>\n<p>给你 n 个非负整数 <code class=\"language-text\">a1，a2，...，an</code>，每个数代表坐标中的一个点 <code class=\"language-text\">(i, ai)</code> 。在坐标内画 <code class=\"language-text\">n</code> 条垂直线，垂直线 <code class=\"language-text\">i</code> 的两个端点分别为 <code class=\"language-text\">(i, ai)</code> 和 <code class=\"language-text\">(i, 0)</code> 。找出其中的两条线，使得它们与 <code class=\"language-text\">x</code> 轴共同构成的容器可以容纳最多的水。</p>\n<p>说明：你不能倾斜容器。</p>\n<h3>示例：</h3>\n<p>示例一：</p>\n<p><img src=\"https://bl3301files.storage.live.com/y4mjATL5jmyLw396pgSID-Sg8pNlPWicjA30JuB_Zr6A-Md6VkWRoiRMT59T26u2xCAzYAJPJWEwHeazC8eYXHHZpO4NINaaBZjEzNzBBenVg0WnOdes0mxXMXnWX443EjccA5Pi7pYA7JHmUcmcNHhGRK9doxBY1S3W2adaqNAbJz68uhNvHVsscblZxNgnXQG?width=660&#x26;height=316&#x26;cropmode=none\" alt=\"示例一图片\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">输入：[1,8,6,2,5,4,8,3,7]\n输出：49 \n解释：图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。</code></pre></div>\n<p>示例二：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">输入：height = [1,1]\n输出：1</code></pre></div>\n<p>示例三：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">输入：height = [4,3,2,1,4]\n输出：16</code></pre></div>\n<p>示例四：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">输入：height = [1,2,1]\n输出：2</code></pre></div>\n<h3>提示：</h3>\n<ul>\n<li><code class=\"language-text\">n == height.length</code></li>\n<li><code class=\"language-text\">2 &lt;= n &lt;= 105</code></li>\n<li><code class=\"language-text\">0 &lt;= height[i] &lt;= 104</code></li>\n</ul>\n<h2>思路</h2>\n<p>在做这道题的时候，我没想到用双指针的方法，而是用复杂度为 O(n^2) 的嵌套循环暴力破解的方法，结果提交之后跑测试用例超时了。当时的想要解决的问题是如何记住面积最大的两个高度值的位置。结果思路是错误的。</p>\n<p>这道题目的关键在于对面积公式的理解，两条高围成一个容器，能装的水的面积是由两条高之间的距离和那条最小高来决定的。假设左边的高度在数组中的下标为 <code class=\"language-text\">x</code>，右边的高度在数组中的下标为 <code class=\"language-text\">y</code>，那么能装水的面积就是：<code class=\"language-text\">s = min(height[x], height[y]) * (y - x)</code> 。</p>\n<p>将公式分为两个部分，一个是 <code class=\"language-text\">min(height[x], height[y])</code>，一个是 <code class=\"language-text\">y - x</code>。<code class=\"language-text\">height</code> 是题目中给定的数组，所以我们只要改变或者 <code class=\"language-text\">x</code>，<code class=\"language-text\">y</code> 就可以获得一个新的 <code class=\"language-text\">s</code>。我们将这个每次迭代得到一个新的 <code class=\"language-text\">s</code> 都会将其与当前的 <code class=\"language-text\">s</code> 对比，保留较大值。</p>\n<p>因为数组中的高度是随机的，所以无论每次移动哪个指针 <code class=\"language-text\">min(height[x], height[y])</code> 的值的变化都是不确定的，而 <code class=\"language-text\">y - x</code> 的变化是更好控制的，我们可以将<strong>两个指针初始化在数组的两端</strong>，左指针只能向右移动，而右指针只能向左移动。这样就可以保证 <code class=\"language-text\">y - x</code> 是随着每次指针移动递减的。</p>\n<p>我们遍历的目的是得到一个最大的 <code class=\"language-text\">s</code>，因为 <code class=\"language-text\">y - x</code> 是每次指针移动都会减小的。那每次移动的结果都要保证 <code class=\"language-text\">min(height[x], height[y])</code> 是有可能大于当前的值的。由于 <code class=\"language-text\">min</code> 是计算最小值，<strong>所以改变更小的数字可能让 <code class=\"language-text\">min(height[x], height[y])</code>  的值变大，而改变当前更大的数字只会使其更小或者不变</strong>，所以要<strong>移动指向更小数字的指针</strong>。</p>\n<h2><strong>要点</strong></h2>\n<ul>\n<li>从数组的两端设置双指针。</li>\n<li>每端的指针只能向另一端移动，每次只能移动一个位置。</li>\n<li>每移动一次指针，就会有一个新的可能的结果。</li>\n<li>只有每次移动指向更小的数字的指针，才有可能得到更大的结果。</li>\n</ul>\n<h2>代码</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">maxArea</span><span class=\"token punctuation\">(</span>height<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>max<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">!==</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        max <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>right <span class=\"token operator\">-</span> left<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>    \n            left <span class=\"token operator\">=</span> left <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            right <span class=\"token operator\">=</span> right <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> max<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>相关阅读</h2>\n<ul>\n<li><a href=\"https://leetcode-cn.com/problems/container-with-most-water/\">11. 盛最多水的容器 - 力扣（LeetCode） (leetcode-cn.com)</a></li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"#%E9%A2%98%E7%9B%AE\">题目：</a></li>\n<li><a href=\"#%E6%80%9D%E8%B7%AF\">思路</a></li>\n<li><a href=\"#%E8%A6%81%E7%82%B9\"><strong>要点</strong></a></li>\n<li><a href=\"#%E4%BB%A3%E7%A0%81\">代码</a></li>\n<li><a href=\"#%E7%9B%B8%E5%85%B3%E9%98%85%E8%AF%BB\">相关阅读</a></li>\n</ul>","frontmatter":{"title":"盛最多水的容器——数组，双指针","date":"2021年10月27日","description":"这道题的关键是如何移动双指针，决定如何移动的关键在于对于公式的理解。","tags":["刷题","算法","数组","双指针","LeetCode"]}},"previous":{"fields":{"slug":"/合并两个有序链表——链表/"},"frontmatter":{"title":"合并两个有序链表——链表"}},"next":{"fields":{"slug":"/数组中重复的数字——哈希表，空间换时间/"},"frontmatter":{"title":"数组中重复的数字——哈希表，空间换时间"}}},"pageContext":{"id":"46792beb-bda3-5ef1-a451-1c9a8c249869","previousPostId":"ff80c6a3-ecab-59c4-b677-d8efd0074849","nextPostId":"7d29c0f2-0bcd-56c4-b169-3620d6dc03fa"}},"staticQueryHashes":["2792646216","2841359383"]}