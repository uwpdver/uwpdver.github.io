{"componentChunkName":"component---src-templates-blog-post-js","path":"/数组中重复的数字——哈希表，空间换时间/","result":{"data":{"site":{"siteMetadata":{"title":"要没时间了的博客"}},"markdownRemark":{"id":"7d29c0f2-0bcd-56c4-b169-3620d6dc03fa","excerpt":"…","html":"<h2>题目：</h2>\n<p>在一个长度为 <code class=\"language-text\">n</code> 的数组 <code class=\"language-text\">nums</code> 里的所有数字都在 <code class=\"language-text\">0～n-1</code> 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。</p>\n<h3>示例：</h3>\n<p>示例一：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">输入：\n[2, 3, 1, 0, 2, 5, 3]\n输出：2 或 3 </code></pre></div>\n<h3>限制：</h3>\n<p><code class=\"language-text\">2 &lt;= n &lt;= 100000</code></p>\n<h2>思路</h2>\n<p>这道题目只要做过类似的用哈希表的题目，就很容易想到思路，典型的空间换时间。遍历一遍数组，将每个遍历到的数字都记录在一个哈希表中。这个哈希表中的每一个键代表当前已经遍历过的一个数字，当遍历到一个哈希表中存在的数字时，就说明这个数字重复了，返回它。这种方法的空间复杂度是 O(2n)，而时间复杂度只有 O(n)。</p>\n<p>如果不用哈希表记录的话，对于每一个数字，都遍历一遍数组，查看是否有与之相等的数字。这样的时间复杂度是 O(n^2)，空间复杂度是 O(n)。明显使用空间换时间很划算。</p>\n<h2>代码</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">findRepeatNumber</span><span class=\"token punctuation\">(</span>nums<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>nums<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> num <span class=\"token operator\">=</span> nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> num\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          map<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>相关阅读</h2>\n<ul>\n<li><a href=\"https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/\">剑指 Offer 03. 数组中重复的数字 - 力扣（LeetCode） (leetcode-cn.com)</a></li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"#%E9%A2%98%E7%9B%AE\">题目：</a></li>\n<li><a href=\"#%E6%80%9D%E8%B7%AF\">思路</a></li>\n<li><a href=\"#%E4%BB%A3%E7%A0%81\">代码</a></li>\n<li><a href=\"#%E7%9B%B8%E5%85%B3%E9%98%85%E8%AF%BB\">相关阅读</a></li>\n</ul>","frontmatter":{"title":"数组中重复的数字——哈希表，空间换时间","date":"2021年10月28日","description":"这是一道简单题。","tags":["刷题","算法","哈希表","LeetCode"]}},"previous":{"fields":{"slug":"/盛水最多的容器——数组，双指针/"},"frontmatter":{"title":"盛最多水的容器——数组，双指针"}},"next":{"fields":{"slug":"/旋转数组的最小数字/"},"frontmatter":{"title":"旋转数组的最小数字"}}},"pageContext":{"id":"7d29c0f2-0bcd-56c4-b169-3620d6dc03fa","previousPostId":"46792beb-bda3-5ef1-a451-1c9a8c249869","nextPostId":"020991ad-88cd-5c47-b74c-a6e419acdc6e"}},"staticQueryHashes":["2792646216","2841359383"]}