{"version":3,"file":"component---src-templates-posts-js-5e377d7ad449f914657b.js","mappings":"+PAiCA,EA7BiB,SAAH,GAA+D,IAAzDA,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAAaC,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAC3D,OACE,2BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,0BAAQF,UAAU,QAChB,sBAAIA,UAAU,0BACZ,gBAAC,EAAAG,KAAI,CAACC,GAAIV,EAAMW,SAAS,OACvB,wBAAMA,SAAS,YAAYV,KAG/B,yBAAOK,UAAU,yBAA4BJ,EAAI,MAAMG,IAEzD,2BAASC,UAAU,aACjB,qBACEA,UAAU,eACVM,wBAAyB,CACvBC,OAAQV,GAAeC,GAEzBO,SAAS,iBAMnB,E,UCwCA,EA5DkB,SAAH,GAAyC,IAAD,EAAlCG,EAAW,EAAXA,YAAaC,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAC9BC,EAASH,EAATG,KACFC,GAAkC,QAAtB,EAAAH,EAAKI,KAAKC,oBAAY,aAAtB,EAAwBnB,QAAK,QACzCoB,EAAQN,EAAKO,kBAAkBC,MAChBC,EAAYT,EAAzBU,UAAaD,MAErB,OACE,gBAAC,IAAM,CAACR,SAAUA,EAAUf,MAAOiB,GACjC,gBAAC,IAAG,CAACjB,MAAM,SACX,uBAAKK,UAAU,kCACb,uBAAKA,UAAU,6BACb,sBAAIA,UAAU,2BACZ,gBAAC,EAAAG,KAAI,CAACC,GAAG,UAAQ,QACjB,4BAAwB,KAAjBO,aAAI,EAAJA,EAAMS,QAAY,MAAST,EAAK,GAAO,GAAE,IAAGI,aAAK,EAALA,EAAOK,OAAM,OAElE,gBAACC,EAAA,KAAS,CACRrB,UAAU,0CACVsB,SAAUC,EAAAA,EACVC,QAAQ,SACRC,QAAQ,QAEPV,EAAMW,KAAI,SAAAC,GACT,IAAMhC,EAAQgC,EAAKC,YAAYjC,OAASgC,EAAKE,OAAOC,KACpD,OACE,gBAACT,EAAA,KAAS,CACRU,IAAKJ,EAAKE,OAAOC,KACjBR,SAAUU,EAAAA,GAEV,gBAAC,EAAQ,CACPhC,UAAU,GACVN,KAAMiC,EAAKE,OAAOC,KAClBnC,MAAOA,EACPC,KAAM+B,EAAKC,YAAYhC,KACvBC,YAAa8B,EAAKC,YAAY/B,YAC9BC,QAAS6B,EAAK7B,QACdC,SAAU4B,EAAKC,YAAY7B,WAInC,MAGJ,uBAAKC,UAAU,4CACb,sBAAIA,UAAU,2BAAyB,SACvC,gBAACqB,EAAA,KAAS,CAACrB,UAAU,gCAClBkB,EAAMQ,KAAI,SAAAO,GAAG,OACZ,gBAAC,IAAO,CACNvC,KAAI,eAAiBwC,IAAUD,EAAIE,YACnCJ,IAAKE,EAAIE,YAERF,EAAIE,WAAU,KAAIF,EAAIG,WAAU,IACzB,OAOxB,C","sources":["webpack://gatsby-starter-blog/./src/components/postItem.js","webpack://gatsby-starter-blog/./src/templates/posts.js"],"sourcesContent":["import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst PostItem = ({ link, title, date, description, excerpt, category }) => {\n  return (\n    <article\n      className=\"post-item\"\n      itemScope\n      itemType=\"http://schema.org/Article\"\n    >\n      <header className=\"mb-1\">\n        <h2 className=\"mb-2 text-xl font-bold\">\n          <Link to={link} itemProp=\"url\">\n            <span itemProp=\"headline\">{title}</span>\n          </Link>\n        </h2>\n        <small className=\"text-xs text-gray-400\">{`${date} | ${category}`}</small>\n      </header>\n      <section className=\"text-base\">\n        <p\n          className=\"line-clamp-2\"\n          dangerouslySetInnerHTML={{\n            __html: description || excerpt,\n          }}\n          itemProp=\"description\"\n        />\n      </section>\n    </article>\n\n  )\n}\n\nexport default PostItem\n\nPostItem.propTypes = {\n  link: PropTypes.string,\n  title: PropTypes.string,\n  date: PropTypes.string,\n  description: PropTypes.string,\n  excerpt: PropTypes.string\n}","import * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { motion } from 'framer-motion';\nimport kebabCase from \"lodash/kebabCase\"\nimport TagItem from \"../components/tagItem\"\nimport PostItem from '../components/postItem';\nimport { listItem, listContainer } from '../common';\n\nconst PostsPage = ({ pageContext, data, location }) => {\n  const { tags } = pageContext\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const { tagsGroup: { group } } = data;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"全部文章\" />\n      <div className=\"flex justify-between flex-wrap\">\n        <div className=\"w-full md:w-7/12 xl:w-3/4\">\n          <h2 className=\"mb-6 text-2xl font-bold\">\n            <Link to=\"/posts\">全部文章</Link>\n            <span>{tags?.length === 1 ? ` / ${tags[0]}` : ''}（{posts?.length}篇）</span>\n          </h2>\n          <motion.ul\n            className=\"border-t pt-4 list-style-none space-y-8\"\n            variants={listContainer}\n            initial=\"hidden\"\n            animate=\"show\"\n          >\n            {posts.map(post => {\n              const title = post.frontmatter.title || post.fields.slug\n              return (\n                <motion.li\n                  key={post.fields.slug}\n                  variants={listItem}\n                >\n                  <PostItem\n                    className=\"\"\n                    link={post.fields.slug}\n                    title={title}\n                    date={post.frontmatter.date}\n                    description={post.frontmatter.description}\n                    excerpt={post.excerpt}\n                    category={post.frontmatter.category}\n                  />\n                </motion.li>\n              )\n            })}\n          </motion.ul>\n        </div>\n        <div className=\"w-full mt-10 md:mt-0  md:w-4/12 xl:w-1/5\">\n          <h2 className=\"mb-6 text-2xl font-bold\">按标签筛选</h2>\n          <motion.ul className=\"border-t pt-4 flex flex-wrap\">\n            {group.map(tag => (\n              <TagItem\n                link={`/posts/tags/${kebabCase(tag.fieldValue)}`}\n                key={tag.fieldValue}\n              >\n                {tag.fieldValue} ({tag.totalCount})\n              </TagItem>\n            ))}\n          </motion.ul>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default PostsPage\n\nexport const pageQuery = graphql`\n  query PostsQuery($tags: [String]) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n\n    allMarkdownRemark(\n      sort: { \n        fields: [frontmatter___date], \n        order: DESC\n      }\n      filter: { \n        frontmatter: {\n           tags: { in: $tags }\n        }\n      }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY年MM月DD日\")\n          title\n          description\n          category\n        }\n      }\n    }\n\n    tagsGroup: allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"names":["link","title","date","description","excerpt","category","className","itemScope","itemType","Link","to","itemProp","dangerouslySetInnerHTML","__html","pageContext","data","location","tags","siteTitle","site","siteMetadata","posts","allMarkdownRemark","nodes","group","tagsGroup","length","motion","variants","listContainer","initial","animate","map","post","frontmatter","fields","slug","key","listItem","tag","kebabCase","fieldValue","totalCount"],"sourceRoot":""}